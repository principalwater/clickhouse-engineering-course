name: Terraform & Python Lint CI

on:
  push:
  pull_request:

jobs:
  find-terraform-dirs:
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.set-dirs.outputs.tf_dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Terraform directories
        id: set-dirs
        run: |
          # Найти все папки с main.tf, исключая игнорируемые .gitignore
          mapfile -t dirs < <(find . -type f -name 'main.tf' \
            | grep -vFf <(git check-ignore $(find . -type f -name 'main.tf') 2>/dev/null || true) \
            | xargs -I {} dirname {} | sort -u)
          echo "Найдены Terraform директории:"
          printf '%s\n' "${dirs[@]}"
          clean_dirs=()
          for d in "${dirs[@]}"; do
            d_clean=$(echo "$d" | xargs)
            [ -n "$d_clean" ] && clean_dirs+=("$d_clean")
          done
          printf '%s\n' "${clean_dirs[@]}" | jq -R . | jq -s . | tr -d ' \n' > tf_dirs.json
          echo "tf_dirs=$(cat tf_dirs.json)" >> $GITHUB_OUTPUT

  terraform:
    needs: find-terraform-dirs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.find-terraform-dirs.outputs.tf_dirs) }}
    defaults:
      run:
        shell: bash
    env:
      BI_USER_PASSWORD: ${{ secrets.BI_USER_PASSWORD }}
      CLICKHOUSE_BI_USER_PASSWORD: ${{ secrets.CLICKHOUSE_BI_USER_PASSWORD }}
      CLICKHOUSE_SUPER_USER_PASSWORD: ${{ secrets.CLICKHOUSE_SUPER_USER_PASSWORD }}
      METABASE_PG_PASSWORD: ${{ secrets.METABASE_PG_PASSWORD }}
      SUPERSET_PG_PASSWORD: ${{ secrets.SUPERSET_PG_PASSWORD }}
      SUPERSET_SA_PASSWORD: ${{ secrets.SUPERSET_SA_PASSWORD }}
      SUPERSET_SECRET_KEY: ${{ secrets.SUPERSET_SECRET_KEY }}
      SUPER_USER_PASSWORD: ${{ secrets.SUPER_USER_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.5'

      - name: Load sensitive variables from variables.tf
        id: load-vars
        run: |
          VARS=""
          if [ -f "${{ matrix.dir }}/variables.tf" ]; then
            for var in $(awk '/variable /{gsub(/["{}]/,"",$2); name=$2} /sensitive *=[^=]*true/ {print name}' "${{ matrix.dir }}/variables.tf"); do
              # Ищем любой секрет, совпадающий по имени (регистронезависимо)
              env_name=$(env | grep -i "^${var}=" | cut -d= -f1 | head -n1)
              if [ -z "$env_name" ]; then
                env_name=$(env | grep -i "^$(echo "$var" | tr '[:lower:]' '[:upper:]')=" | cut -d= -f1 | head -n1)
              fi
              if [ -n "$env_name" ]; then
                val=$(printenv "$env_name")
                VARS="$VARS -var=$var=\"$val\""
              fi
            done
          fi
          echo "vars=$VARS" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: terraform init -backend=false
        working-directory: ${{ matrix.dir }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ matrix.dir }}

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: ${{ matrix.dir }}

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan ${{ steps.load-vars.outputs.vars }}
          terraform show -no-color tfplan > plan.txt
        working-directory: ${{ matrix.dir }}

      - name: Upload Terraform plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ matrix.dir }}
          path: ${{ matrix.dir }}/plan.txt

  python-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Find and check Python scripts syntax
        run: |
          # Найти все .py-файлы, не игнорируемые .gitignore и не приватные
          git ls-files '*.py' ':!:additional/bi-infra/**/superset_config.py' ':!:additional/bi-infra/**/*config.py' ':!:additional/bi-infra/**/*secret.py' \
            | while read -r file; do
                echo "Проверка синтаксиса: $file"
                python -m py_compile "$file"
              done
